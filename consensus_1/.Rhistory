hist(df_norm$V4, 100)
hist(x1,100)
hist(x2,100)
x1 = rbinom(n = 1000, size = 40, p = 0.03)
x2 = rbinom(n = 1000, size = 40, p = 0.03)
x3 = rbinom(n = 1000, size = 40, p = 0.03)
x4 = rbinom(n = 1000, size = 40, p = 0.03)
df = data.frame(x1 = x1, x2=x2, x3=x3, x4=x4)
df_norm <- as.data.frame(normalize.quantiles(as.matrix(df)))
hist(x1,100)
x1 = rbinom(n = 10000, size = 40, p = 0.03)
x2 = rbinom(n = 10000, size = 40, p = 0.03)
x3 = rbinom(n = 10000, size = 40, p = 0.03)
x4 = rbinom(n = 10000, size = 40, p = 0.03)
hist(x1,100)
hist(df_norm$V1)
hist(df_norm$V2)
hist(df_norm$V3)
hist(df_norm$V4)
x1 = rbinom(n = 10000, size = 200, p = 0.03)
x2 = rbinom(n = 10000, size = 200, p = 0.03)
x3 = rbinom(n = 10000, size = 200, p = 0.03)
x4 = rbinom(n = 10000, size = 200, p = 0.03)
df = data.frame(x1 = x1, x2=x2, x3=x3, x4=x4)
df_norm <- as.data.frame(normalize.quantiles(as.matrix(df)))
hist(df_norm$V1)
#########
x = fread("BLUEPRINT_PE_ge_T-cell.permuted.tsv")
#########
x = fread("/Users/datn/Downloads/BLUEPRINT_PE_ge_T-cell.permuted.tsv")
#########
require(data.table)
x = fread("/Users/datn/Downloads/BLUEPRINT_PE_ge_T-cell.permuted.tsv")
head(x)
y = fread("/Users/datn/DATA_ANALYSES/real_data_results/qtl_mapping_apply_qvalue/salmon.tsv")
head(y)
x = x[x$p_perm < 0.05,]
dim(x)
head(y)
sum(y$V1 %in% x$molecular_trait_object_id)
dim(y)
View(624/789)
624/789
View(x)
table(x$molecular_trait_object_id == x$molecular_trait_id)
sum(y$V1 %in% x$molecular_trait_object_id)
0.05*7000
0.05*789
b = fread("/Users/datn/Downloads/blueprint_wp10_qtl_query_result_2022-10-14T20_46_33+02_00.tsv")
View(b)
unique(b$qtl_id)
length(unique(b$qtl_id))
b = b[b$`p-bonferroni` < 0.05,]
dim(b)
??keys
f2 <- function(x) {
try(log(x))
10
}
f2("a")
f1 <- function(x) {
log(x)
10
}
f1("x")
f1 <- function(x) {
log(x)
10
}
f1("x")
f1("x")
f2 <- function(x) {
try(log(x))
10
}
f2("a")
x = f2("a")
x
x = f2(10)
x
x = f2(1)
x
x = f2(15)
x
log(15)
integrate
??integrate
f = function(x){x^2 + 10}
integrate(f, 0, 2)
f = function(x){x^2}
integrate(f, 0, 2)
2/3*x^3
x
2/3*x^3
x = 2
2/3*x^3
x = 0
2/3*x^3
integrate(f, 0, 2)
1/3*x^3
1/3*x^3
x = 2
1/3*x^3
integrate(f, 0, 2)
(-0.2)^2
(-0.2)^2/2
-0.02+1/2
dunif(x, min = 0, max = 1, log = FALSE)
dunif(x, min = 0, max = 1, log = FALSE)
runif(n, min = 0, max = 1)
n=10
runif(n, min = 0, max = 1)
a = runif(10000, min = 0, max = 1)
b = runif(10000, min = 0, max = 1)
z = a-b
z
plot(density(z))
abline(v= 0.1)
abline(v= -0.2)
abline(h= 0.8)
(1/4() / (2/3)
(1/4) / (2/3)
0.25 / (2/3)
0.25 / 0.6666667
0.25 / 0.66
0.25 / 0.6666
7/16
exp(1)
exp(2)
exp(-1)
exp(0)
exp(999)
exp(99)
exp(-99)
pchisq(q=12.70162209, df =1)
pchisq(12.7, df=4, lower.tail=FALSE)
pchisq(12.7, df=1, lower.tail=FALSE)
dirname()
dirname("./")
dirname("/datn/x.txt")
basename("/datn/x.txt")
require(data.table)
x = fread("/Users/datn/Downloads/covariates.txt")
View(x)
dnorm
??dnorm
??dpois
pnorm(0.05)
pnorm(0.9)
qnorm(0.9)
qnorm(0.05)
qnorm(0.025)
## week 11
# 90% CI => qnorm(0.05)
qnorm(0.05)
qnorm(1-0.05)
ME = 0.02
z = qnorm(1-0.05)
n = ((z/ME)^2)*p*(1-p)
p = 0.5
n = ((z/ME)^2)*p*(1-p)
n
## question 12
# 90% CI => qnorm(0.05)
qnorm(0.05)
qnorm(1-0.05)
ME = 0.02
z = qnorm(1-0.05)
p = 0.06
n = ((z/ME)^2)*p*(1-p)
n
ME = 0.032
z = qnorm(1-0.05)
p = 0.06
n = ((z/ME)^2)*p*(1-p)
n
z = qnorm(1-0.025)
ME = 0.032
z = qnorm(1-0.025)
p = 0.06
n = ((z/ME)^2)*p*(1-p)
n
ME = 0.02
## question 12
# 90% CI => qnorm(0.05)
qnorm(0.05)
qnorm(1-0.05)
ME = 0.02
z = qnorm(1-0.05)
p = 0.06
n = ((z/ME)^2)*p*(1-p)
n
ME = 0.02
ME = 3
z = qnorm(1-00.05)
sig = 9.34
n = ((z*sig/ME)^2)
n
z = qnorm(1-0.005)
sig = 9.34
n = ((z*sig/ME)^2)
n
z
x = fread("/Users/datn/Downloads/ImmuneTea.csv")
??t.test
View(x)
t.test(x$InterferonGamma[x$Drink == "Tea"], x$InterferonGamma[x$Drink == "Coffee"])
t.test(x$InterferonGamma[x$Drink == "Tea"], x$InterferonGamma[x$Drink == "Coffee"], alternative = "greater")
ME = 0.02
z = qnorm(1-0.05)
p = 0.5
n = ((z/ME)^2)*p*(1-p)
n
ME = 0.02
z = qnorm(1-0.05)
p = 0.06
n = ((z/ME)^2)*p*(1-p)
n
ME = 3
z = qnorm(1-0.005)
sig = 9.34
n = ((z*sig/ME)^2)
n
0.06 * 1Ãª
0.06 * 1e6
0.06 * 1e6/12
mean(c(14/15, 14/14, 10/12,10/12,10/10,3/4,8/8,4/5,14/14,6/9))
c(14/15, 14/14, 10/12,10/12,10/10,3/4,8/8,4/5,14/14,6/9)
x = c(14/15, 14/14, 10/12,10/12,10/10,3/4,8/8,4/5,14/14,6/9)
length(x)
x = c(14/15, 14/14, 10/12,10/12,10/10,3/4,8/8,4/5,14/14,6/9,10/10)
mean(x)
x = c(14/15, 14/14, 10/12,10/12,10/10,3/4,8/8,4/5,14/14,10/10)
mean(x)
x = c(14/15, 14/14, 10/12,10/12,10/10,3/4,8/8,4/5,14/14,6/9,10/10,10/10,10/10)
length(x)
y = sort(x)
y
mean(y[3:])
mean(y[-c(1,2)])
0.94*3
0.94*30
#3. Basic In/Out in R
## 3.1 reading file with relative path
setwd("~")
setwd("/Users/datn/PERSONAL/youtube/R_data_science")
#3. Basic In/Out in R
## 3.1 reading file with relative path
getwd()
#3. Basic In/Out in R
## 3.1 reading file with relative path
setwd(~)
getwd()
getwd()
setwd("~")
getwd()
setwd("/Users/datn/PERSONAL/youtube/R_data_science")
getwd()
print("Xin chao cac ban")
x = "Xin chao cac ban"
print(x)
x
##
y = 1
y2 = 1.1
y3 = "1.1"
class(y)
class(y1)
##
y = 1
y1 = 1.1
y2 = "1.1"
class(y)
class(y1)
class(y2)
y = 1
y
class(y)
as.integer(y)
class(y)
##
y = 1L
class(y)
##
y = c(1,2,3,4)
class(y)
y2 = c("1", 2, 3, 4)
class(y2)
##
y = c(1, 2, 3, 4)
y1 = c(1L, 2, 3, 4)
y2 = c("1", 2, 3, 4)
y[1]
y[2]
y[3]
y[4]
##
y = c(10L, 20L, 30L, 40L)
y1 = c(10L, 20L, 30L, 40)
y2 = c("10", 20, 30, 40)
class(y)
class(y1)
class(y2)
y2
z = y + y1
z2 = y + y3
z2
y + y1
y + y1
y
y + y3
y + as.integer(y3)
y
y
print("Xin chao cac ban")
x = "Xin chao cac ban"
print(x)
x
##
y = 1L
y1 = 1
y2 = "1"
class(y)
class(y1)
class(y2)
##
z = c(10L, 20L, 30L, 40L)
z1 = c(10L, 20L, 30L, 40)
z2 = c("10", 20, 30, 40)
class(z)
class(z1)
class(z2)
y + z
y + z1
y + z2
y + as.integer(z2)
z[1]
z1[1:2]
y + z
y + z1
y + z2
y + as.integer(z2)
getwd()
#setwd("~")
getwd()
## noted: R only worky with "/", window user need to change "\" => "/" or "\" => "\\"
setwd("/Users/datn/PERSONAL/youtube/R_data_science")
getwd()
setwd("~")
print("Xin chao cac ban")
print("Xin chao cac ban")
x = "Xin chao cac ban"
print(x)
x
##
y = 1L
y1 = 1
y2 = "1"
class(y)
class(y1)
class(y2)
##
z = c(10L, 20L, 30L, 40L)
z1 = c(10L, 20L, 30L, 40)
z2 = c("10", 20, 30, 40)
class(z)
class(z1)
class(z2)
y + z
y + z1
y + z2
y + as.integer(z2)
#3. Basic In/Out in R
## reading file with relative path
getwd()
## noted: R only worky with "/", window user need to change "\" => "/" or "\" => "\\"
setwd("/Users/datn/PERSONAL/youtube/R_data_science")
getwd()
??print
??read.csv
??write.csv
??read.table
??setwd
??base::setwd
??getwd
??read.table
??read.delim
??read.csv
??desprice
??describe
print("Xin chao cac ban")
x = "Xin chao cac ban"
print(x)
x
##
y = 1L
y1 = 1
y2 = "1"
class(y)
class(y1)
class(y2)
##
z = c(10L, 20L, 30L, 40L)
z1 = c(10L, 20L, 30L, 40)
z2 = c("10", 20, 30, 40)
class(z)
class(z1)
class(z2)
y + z
y + z1
y + z2
y + as.integer(z2)
??getwd
??read.csv
#3. Basic In/Out in R
## noted: R only worky with "/", window user need to change "\" => "/" or "\" => "\\"
## reading file with relative path
getwd()
df = read.table("data/sales_data.csv")
df = read.table("data/sales_data.csv", sep = ",", fill = TRUE)
View(df)
df = read.table("data/sales_data.csv", sep = ",", fill = TRUE, header = TRUE)
df = read.table("data/sales_data.csv", sep = ",", fill = TRUE, header = TRUE, quote = "")
View(df)
df = read.table("data/sales_data.csv", sep = ",",  header = TRUE, quote = "")
df = read.table("data/sales_data.csv", sep = ",", fill = TRUE, header = TRUE, quote = "")
df = read.table("data/sales_data.csv", sep = ",", header = TRUE, fill = TRUE, quote = "")
df = read.csv("data/sales_data.csv", sep = ",")
df = read.csv("/Users/datn/PERSONAL/youtube/data_science_tutorial/data/sales_data.csv", sep = ",")
save.image(file = "my_env.Rdata")
load("my_env.Rdata")
ls
df = write.table("data/sales_data.tsv", sep = "\t", row.names = F, quote = "")
df
df = write.table("data/sales_data.tsv", sep = "\t", row.names = F, quote = "")
df = write.table("data/sales_data.tsv", sep = "\t", row.names = F, quote = F)
df = write.table("data/sales_data.tsv", sep = "\t", row.names = F, quote = FALSE)
getwd()
df = write.table(df, file = "data/sales_data.tsv", sep = "\t", row.names = F, quote = FALSE)
df
#3. Basic In/Out in R
## noted: R only worky with "/", window user need to change "\" => "/" or "\" => "\\"
## full path
df = read.table("/Users/datn/PERSONAL/youtube/data_science_tutorial/data/sales_data.csv", sep = ",", header = TRUE, fill = TRUE, quote = "")
df = write.table(df, file = "data/sales_data.tsv", sep = "\t", row.names = F, quote = FALSE)
csv = read.csv("/Users/datn/PERSONAL/youtube/data_science_tutorial/data/sales_data.csv")
dim(csv)
tsv = read.delim("/Users/datn/PERSONAL/youtube/data_science_tutorial/data/sales_data.csv")
dim(tsv)
head(tsv)
View(tsv)
tsv = read.delim("/Users/datn/PERSONAL/youtube/data_science_tutorial/data/sales_data.tsv")
head(tsv)
## data type conversion
as.character(z)
## vector
z = c(10L, 20L, 30L, 40L)
z1 = c(10L, 20L, 30L, 40)
z2 = c("10", 20, 30, 40)
class(z)
class(z1)
class(z2)
y + z
y + z1
y + z2
## data type conversion
as.character(z)
as.integer(z2)
y + as.integer(z2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
??ggplot
setwd("~")
require(data.table)
require(locuscomparer)
setwd("/Users/datn/github/circQTL_analysis/consensus_1")
#setwd("nextflow_output")
#load("coloc_result_T1D.tsv.gz.Rdata")
#id = "6__90249688__90271941__ENSG00000112182"
#df = res[[id]]
my_plotter <- function(df){
gwas_fn = eqtl_fn = "tem.txt"
marker_col = "rsID"
gwas_pvalue = "gwas_pvalue"
eqtl_pvalue = "eqtl_pvalue"
fwrite(df, file = gwas_fn, row.names = F, sep = "\t")
res = locuscompare(in_fn1=gwas_fn, in_fn2=eqtl_fn, title1="GWAS", title2="eQTL", marker_col1= marker_col, pval_col1=gwas_pvalue, marker_col2=marker_col, pval_col2=eqtl_pvalue)
return(res)
}
#my_plotter(df)
plot_all <- function(data){
locuscompare_res = list()
load(data)
ids = as.character( qtl_hit$V1[qtl_hit$PP.H4.abf >= 0.7])
if(length(ids> 0)){
for(id in ids){
df = res[[id]]
locuscompare_res[[id]] = my_plotter(df)
}
}
return(locuscompare_res)
}
t1d_recount= plot_all("/Users/datn/Downloads/coloc_result_T1D.tsv.gz.Rdata")
cd_recount= plot_all("/Users/datn/Downloads/coloc_result_CD.tsv.gz.Rdata")
ibd_recount= plot_all("/Users/datn/Downloads/coloc_result_IBD.tsv.gz.Rdata")
uc_recount= plot_all("/Users/datn/Downloads/coloc_result_UC.tsv.gz.Rdata")
t1d_recount
cd_recount
ibd_recount
uc_recount
t1d_recount
