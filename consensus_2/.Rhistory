round(beta3_h, 3)
beta2_var = diag(beta2_cov)
round(beta2_var, 3)
beta1_h[2]
beta3_var[2]
round(beta2_var, 3)
round(beta2_var, 3)
beta2_var[2]
beta2_cov
beta3_var[2]
beta3_var
beta3_cov
a = beta1_h[2] - beta3_h[3]
b = (beta2_h[2])^2*beta3_var[2] + (beta3_h[2])^2*beta2_var[2]
Z = a / sqrt(b)
Z
require(bda)
mediation.test(data$m, data$x,data$y)
1.273030e+01
??coloc.abf
setwd("/Users/datn/github/circQTL_analysis")
require(data.table)
circ_atlas = as.data.frame(fread("databases/human_bed_v2.0.txt"))
circ_atlas$Chr = gsub("chr", "", circ_atlas$Chro)
circ_atlas$Id = paste(circ_atlas$Chr, circ_atlas$Start-1, circ_atlas$End, sep = "__")
read_circ_id <- function(tool, dir = "consensus_2"){
df = fread(paste0(dir, "/", tool, "/", tool, "_res_merged_bsj_2.tsv"))
id = df$ID
id = id[grepl("EN", id)]
idx = sapply(id, FUN = function(x){unlist(gregexpr("__", x))[3]})
id = substr(id, 1, idx-1)
return(id)
}
circall = read_circ_id("circall")
ciri2 = read_circ_id("ciri2")
circexp2 = read_circ_id("circexp2")
table(circall %in% circ_atlas$Id)[1]/sum(table(circall %in% circ_atlas$Id))*100
table(ciri2 %in% circ_atlas$Id)[1]/sum(table(ciri2 %in% circ_atlas$Id))*100
table(circexp2 %in% circ_atlas$Id)[1]/sum(table(circexp2 %in% circ_atlas$Id))*100
x = list(Circall = circall, CIRI2 = ciri2, CIRCexplorer2 = circexp2)
t = c(circall, ciri2, circexp2)
t1 = table(t)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
require(ggVennDiagram)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
require(data.table)
require(ggVennDiagram)
require(ggplot2)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
read_circ_id <- function(tool, dir = "consensus_2"){
df = fread(paste0(dir, "/quantile_norm/", tool, "_quantile_norm.tsv"))
id = df$TargetID
id = id[grepl("EN", id)]
idx = sapply(id, FUN = function(x){unlist(gregexpr("__", x))[3]})
id = substr(id, 1, idx-1)
return(id)
}
#circall = fread("nextflow_output/circall/circall_res_merged_bsj_2.tsv")
#ciri2 = fread("nextflow_output/ciri2/ciri2_res_merged_bsj_2.tsv")
#circexp2 = fread("nextflow_output/circexp2/circexp2_res_merged_bsj_2.tsv")
circall = read_circ_id("circall")
ciri2 = read_circ_id("ciri2")
circexp2 = read_circ_id("circexp2")
table(circall %in% circ_atlas$Id)[1]/sum(table(circall %in% circ_atlas$Id))*100
table(ciri2 %in% circ_atlas$Id)[1]/sum(table(ciri2 %in% circ_atlas$Id))*100
table(circexp2 %in% circ_atlas$Id)[1]/sum(table(circexp2 %in% circ_atlas$Id))*100
x = list(Circall = circall, CIRI2 = ciri2, CIRCexplorer2 = circexp2)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
length(circall)
length(ciri2)
length(CIRCexplorer2)
length(circexp2)
40*0.3
require(data.table)
require(locuscomparer)
setwd("/Users/datn/github/circQTL_analysis")
#setwd("nextflow_output")
#load("coloc_result_T1D.tsv.gz.Rdata")
#id = "6__90249688__90271941__ENSG00000112182"
#df = res[[id]]
my_plotter <- function(df){
gwas_fn = eqtl_fn = "tem.txt"
marker_col = "rsID"
gwas_pvalue = "gwas_pvalue"
eqtl_pvalue = "eqtl_pvalue"
fwrite(df, file = gwas_fn, row.names = F, sep = "\t")
res = locuscompare(in_fn1=gwas_fn, in_fn2=eqtl_fn, title1="GWAS", title2="eQTL", marker_col1= marker_col, pval_col1=gwas_pvalue, marker_col2=marker_col, pval_col2=eqtl_pvalue)
return(res)
}
#my_plotter(df)
plot_all <- function(data){
locuscompare_res = list()
load(data)
ids = as.character( qtl_hit$V1[qtl_hit$PP.H4.abf >= 0.5])
if(length(ids> 0)){
for(id in ids){
df = res[[id]]
locuscompare_res[[id]] = my_plotter(df)
}
}
return(locuscompare_res)
}
t1d_ciri = plot_all("coloc_ciri2/coloc_result_T1D.tsv.gz.Rdata")
cd_ciri = plot_all("coloc_ciri2/coloc_result_CD.tsv.gz.Rdata")
ibd_ciri = plot_all("coloc_ciri2/coloc_result_IBD.tsv.gz.Rdata")
uc_ciri = plot_all("coloc_ciri2/coloc_result_UC.tsv.gz.Rdata")
require(data.table)
require(locuscomparer)
setwd("/Users/datn/github/circQTL_analysis/consensus_2")
t1d_ciri = plot_all("coloc_ciri2/coloc_result_T1D.tsv.gz.Rdata")
cd_ciri = plot_all("coloc_ciri2/coloc_result_CD.tsv.gz.Rdata")
ibd_ciri = plot_all("coloc_ciri2/coloc_result_IBD.tsv.gz.Rdata")
uc_ciri = plot_all("coloc_ciri2/coloc_result_UC.tsv.gz.Rdata")
t1d_ciri
cd_ciri
ibd_ciri
uc_ciri
t1d_circall = plot_all("coloc_circall/coloc_result_T1D.tsv.gz.Rdata")
cd_circall = plot_all("coloc_circall/coloc_result_CD.tsv.gz.Rdata")
ibd_circall = plot_all("coloc_circall/coloc_result_IBD.tsv.gz.Rdata")
uc_cirall = plot_all("coloc_circall/coloc_result_UC.tsv.gz.Rdata")
t1d_circall
cd_circall
cd_circall
ibd_circall
uc_cirall
load("/Users/datn/github/circQTL_analysis/consensus_2/coloc_circall/coloc_result_T1D.tsv.gz.Rdata")
View(qtl_hit)
t1d_ciri$`6__90206568__90271941__ENSG00000112182,`
load("/Users/datn/github/circQTL_analysis/consensus_2/coloc_circexp2/coloc_result_CD.tsv.gz.Rdata")
t1d_circexp2 = plot_all("coloc_circexp2/coloc_result_T1D.tsv.gz.Rdata")
cd_circexp2 = plot_all("coloc_circexp2/coloc_result_CD.tsv.gz.Rdata")
ibd_circexp2 = plot_all("coloc_circexp2/coloc_result_IBD.tsv.gz.Rdata")
uc_circexp2 = plot_all("coloc_circexp2/coloc_result_UC.tsv.gz.Rdata")
t1d_circexp2
cd_circexp2
ibd_circexp2
uc_circexp2
setwd("/Users/datn/github/circQTL_analysis")
require(data.table)
require(ggVennDiagram)
require(ggplot2)
circ_atlas = as.data.frame(fread("databases/human_bed_v2.0.txt"))
circ_atlas$Chr = gsub("chr", "", circ_atlas$Chro)
circ_atlas$Id = paste(circ_atlas$Chr, circ_atlas$Start-1, circ_atlas$End, sep = "__")
read_circ_id <- function(tool, dir = "consensus_2"){
df = fread(paste0(dir, "/", tool, "/", tool, "_res_merged_bsj_2.tsv"))
id = df$ID
id = id[grepl("EN", id)]
idx = sapply(id, FUN = function(x){unlist(gregexpr("__", x))[3]})
id = substr(id, 1, idx-1)
return(id)
}
circall = read_circ_id("circall")
ciri2 = read_circ_id("ciri2")
circexp2 = read_circ_id("circexp2")
table(circall %in% circ_atlas$Id)[1]/sum(table(circall %in% circ_atlas$Id))*100
table(ciri2 %in% circ_atlas$Id)[1]/sum(table(ciri2 %in% circ_atlas$Id))*100
table(circexp2 %in% circ_atlas$Id)[1]/sum(table(circexp2 %in% circ_atlas$Id))*100
x = list(Circall = circall, CIRI2 = ciri2, CIRCexplorer2 = circexp2)
t = c(circall, ciri2, circexp2)
t1 = table(t)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
load("/Users/datn/github/circQTL_analysis/consensus_2/coloc_ciri2/coloc_result_CD.tsv.gz.Rdata")
library(VennDiagram)
ggVennDiagram(x, set_color = "black") +  theme(legend.position = "none")
display_venn <- function(x, ...){
library(VennDiagram)
grid.newpage()
venn_object <- venn.diagram(x, filename = NULL, ...)
grid.draw(venn_object)
}
display_venn(x)
display_venn(
x,
fill = c("#999999", "#E69F00", "#56B4E9")
)
display_venn(x)
display_venn(x)
display_venn(
x,
category.names = c("Set 1" , "Set 2 " , "Set 3"),
fill = c("#999999", "#E69F00", "#56B4E9")
)
display_venn(x)
display_venn(
x,
category.names = c("Set 1" , "Set 2 " , "Set 3"),
fill = c("#999999", "#E69F00", "#56B4E9"))
display_venn <- function(x, ...){
library(VennDiagram)
grid.newpage()
venn_object <- venn.diagram(x, filename = NULL, ...)
grid.draw(venn_object)
}
display_venn(x, fill = c("#999999", "#E69F00", "#56B4E9"))
read_circ_id <- function(tool, dir = "consensus_2"){
df = fread(paste0(dir, "/quantile_norm/", tool, "_quantile_norm.tsv"))
id = df$TargetID
id = id[grepl("EN", id)]
idx = sapply(id, FUN = function(x){unlist(gregexpr("__", x))[3]})
id = substr(id, 1, idx-1)
return(id)
}
#circall = fread("nextflow_output/circall/circall_res_merged_bsj_2.tsv")
#ciri2 = fread("nextflow_output/ciri2/ciri2_res_merged_bsj_2.tsv")
#circexp2 = fread("nextflow_output/circexp2/circexp2_res_merged_bsj_2.tsv")
circall = read_circ_id("circall")
ciri2 = read_circ_id("ciri2")
circexp2 = read_circ_id("circexp2")
table(circall %in% circ_atlas$Id)[1]/sum(table(circall %in% circ_atlas$Id))*100
table(ciri2 %in% circ_atlas$Id)[1]/sum(table(ciri2 %in% circ_atlas$Id))*100
table(circexp2 %in% circ_atlas$Id)[1]/sum(table(circexp2 %in% circ_atlas$Id))*100
x = list(Circall = circall, CIRI2 = ciri2, CIRCexplorer2 = circexp2)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
read_circ_id <- function(tool, dir = "consensus_2"){
df = fread(paste0(dir, "/qtl_mapping_apply_qvalue/", tool, ".tsv"))
id = df$V1
id = id[grepl("EN", id)]
idx = sapply(id, FUN = function(x){unlist(gregexpr("__", x))[3]})
id = substr(id, 1, idx-1)
return(id)
}
circall = read_circ_id("circall")
ciri2 = read_circ_id("ciri2")
circexp2 = read_circ_id("circexp2")
table(circall %in% circ_atlas$Id)[1]/sum(table(circall %in% circ_atlas$Id))*100
table(ciri2 %in% circ_atlas$Id)[1]/sum(table(ciri2 %in% circ_atlas$Id))*100
table(circexp2 %in% circ_atlas$Id)[1]/sum(table(circexp2 %in% circ_atlas$Id))*100
x = list(Circall = circall, CIRI2 = ciri2, CIRCexplorer2 = circexp2)
ggVennDiagram(x, set_color = "black") +  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +  theme(legend.position = "none")
load("/Users/datn/github/circQTL_analysis/consensus_2/recount/coloc_result_T1D.tsv.gz.Rdata")
qtl_hit$PP.H4.abf
round(qtl_hit$PP.H4.abf,3)
t1d_recount= plot_all("recount/coloc_result_T1D.tsv.gz.Rdata")
cd_recount= plot_all("recount/coloc_result_CD.tsv.gz.Rdata")
ibd_recount= plot_all("recount/coloc_result_IBD.tsv.gz.Rdata")
uc_recount= plot_all("recount/coloc_result_UC.tsv.gz.Rdata")
setwd("/Users/datn/github/circQTL_analysis/consensus_2")
t1d_recount= plot_all("recount/coloc_result_T1D.tsv.gz.Rdata")
cd_recount= plot_all("recount/coloc_result_CD.tsv.gz.Rdata")
ibd_recount= plot_all("recount/coloc_result_IBD.tsv.gz.Rdata")
uc_recount= plot_all("recount/coloc_result_UC.tsv.gz.Rdata")
t1d_recount
cd_recount
ibd_recount
uc_recount
View(res)
x = read.table("/Users/datn/Downloads/x.txt")
View(x)
mean(x$V1)
sum(x$V1)/(length(x$V1)+0.01)
sum(x$V1)/(length(x$V1)*2)
sum(x$V1)/(length(x$V1)+0.01)
sum(x$V1)/29
sum(x$V1)/27
d = fread("/Users/datn/Downloads/HW2_data.csv")
d
head(d)
xi = 0.01
y = d$y
sum(y/length(y+xi))
1/0.01
30/(130)
0.2307692* 1.58
mean(x$V1)
meadn(x$V1[1:15])
mean(x$V1[1:15])
1/2*(sum(y^2) - (length(y)^2 - mean(y)^2)/(length(y)+xi))
sum(y/(n+xi))
xi = 0.01
y = d$y
n = length(y)
sum(y/(n+xi))
1/2*(a - b/c)
a = sum(y^2)
b = (n^2) * (mean(y)^2)
c = n + xi
1/2*(a - b/c)
y = x$V1
n = length(y)
sum(y/(n+xi))
a = sum(y^2)
b = (n^2) * (mean(y)^2)
c = n + xi
1/2*(a - b/c)
# UCB
n0 = 100
6.437706+0.01
a = (y - mean(y))^2
a
a = sum(a)
a
miu0 = 0
a = (y - mean(y))^2
a = sum(a)
b = n*n0 * (mean(y) - miu0)^2
b = b/2(n + n0)
n
b = n*n0 * (mean(y) - miu0)^2
b = b/2(n + n0)
n0
2(n + n0)
b = b/2*(n + n0)
# UCB
n0 = 100
miu0 = 0
a = (y - mean(y))^2
a = 1/2*sum(a)
b = n*n0 * (mean(y) - miu0)^2
b = b/2*(n + n0)
a+b
a
b
# UCB
n0 = 10
miu0 = 0
a = (y - mean(y))^2
a = 1/2*sum(a)
b = n*n0 * (mean(y) - miu0)^2
b = b/2*(n + n0)
a+b
# UCB
n0 = 0.01
miu0 = 0
a = (y - mean(y))^2
a = 1/2*sum(a)
b = n*n0 * (mean(y) - miu0)^2
b = b/2*(n + n0)
a+b
View(d)
View(d)
d = fread("/Users/datn/Downloads/HW2_data.csv")
View(d)
d = fread("/Users/datn/Library/CloudStorage/Box-Box/Utexas/2024_sp_regression/HW2_data.csv")
#d = fread("/Users/datn/Downloads/HW2_data.csv")
d = fread("/Users/datn/Library/CloudStorage/Box-Box/Utexas/2024_sp_regression/HW2_data.csv")
xi = 0.01
y = d$y
y = x$V1
n = length(y)
sum(y/(n+xi))
# UTexas
a = sum(y^2)
b = (n^2) * (mean(y)^2)
c = n + xi
1/2*(a - b/c)
# UCB
n0 = 0.01
miu0 = 0
a = (y - mean(y))^2
a = 1/2*sum(a)
b = n*n0 * (mean(y) - miu0)^2
b = b/2*(n + n0)
a+b
## question 2
d = fread("/Users/datn/Downloads/HW2_data.csv")
sig = 1
## question 2
sig = 1
## question 2
sig = 1
y = d$y
X = as.matrix([,-1])
X = as.matrix(d[,-1])
X
0.01^-1
B_hat = solve(t(X)%*%X) %*% t(X)%*%y
B_hat
Bh = solve(t(X)%*%X) %*% t(X)%*%y
hb
Bh
Bh/(1+xi)
Bh
# posteior Bh covariance maxtrix
M = solve(t(X)%*%X) %*% t(X)
M
M
dim(M)
# posteior Bh covariance maxtrix
M = solve(t(X)%*%X)
M
# posteior Bh covariance maxtrix
Bcov = sig^2 * solve(t(X)%*%X)
Bcov
# posteior Bh covariance maxtrix
Bcov/(1+xi)
# posteior Bh covariance maxtrix
Bcov/(1+xi)
Bcov
round(Bcov/(1+xi),3)
X1 = as.matrix(d[,-c(1,4)])
X1
X1 = X0[,-3]
y = d$y
X0 = as.matrix(d[,-1])
X1 = X0[,-3]
X1
X0
Bh0 = solve(t(X1)%*%X1) %*% t(X1)%*%y
Bh0
bh
Bh
y = d$y
X1 = as.matrix(d[,-1])
X0 = X1[,-3]
X0 = as.matrix(d[, -c(1,4)])
X1 = as.matrix(d[,-1])
Bh0 = solve(t(X0)%*%X0) %*% t(X0)%*%y
Bh1 = solve(t(X1)%*%X1) %*% t(X1)%*%y
Bh0
Bh1
X0
X1
magin_likelihood  = function(B, X, xi = 0.01){
a = t(B)%*%t(X) %*% B%*%X
b = 1 + xi
return(a/b)
}
magin_likelihood(Bh0, X0)
B = Bh0
X = X0
t(B)%*%t(X) %*% B%*%X
t(B)%*%t(X)
View(t(B)%*%t(X))
View(B%*%X)
View(B%*%X)
X%*%B
View(X%*%B)
magin_likelihood  = function(B, X, xi = 0.01){
a = t(B)%*%t(X) %*% X%*%B
b = 1 + xi
return(a/b)
}
Bh0 = solve(t(X0)%*%X0) %*% t(X0)%*%y
Bh1 = solve(t(X1)%*%X1) %*% t(X1)%*%y
magin_likelihood(Bh0, X0)
magin_lh  = function(B, X, xi = 0.01){
a = t(B)%*%t(X) %*% X%*%B
b = 1 + xi
return(a/b)
}
MLH  = function(B, X, xi = 0.01){
a = t(B)%*%t(X) %*% X%*%B
b = 1 + xi
return(a/b)
}
mlh  <- function(B, X, xi = 0.01){
a = t(B)%*%t(X) %*% X%*%B
b = 1 + xi
return(a/b)
}
mlh(Bh0, X0)
1/2*1/sig^2
1/2*1/sig^2*(mlh(Bh1, X1) - mlh(Bh0, X0))
mlh(Bh0, X0)
mlh(Bh1, X1)
length(Bh0)
1/2*1/sig^2*(mlh(Bh1, X1) - mlh(Bh0, X0)) + 1/2( length(Bh1) - length(Bh0))*log(xi/(1+xi))
1/2*1/sig^2*(mlh(Bh1, X1) - mlh(Bh0, X0)) + 1/2*( length(Bh1) - length(Bh0))*log(xi/(1+xi))
#d = fread("/Users/datn/Downloads/HW2_data.csv")
d = fread("/Users/datn/Library/CloudStorage/Box-Box/Utexas/2024_sp_regression/HW2_data.csv")
xi = 0.01
y = d$y
y = x$V1
n = length(y)
sum(y/(n+xi))
# UTexas
a = sum(y^2)
b = (n^2) * (mean(y)^2)
c = n + xi
1/2*(a - b/c)
# UCB
n0 = 0.01
miu0 = 0
a = (y - mean(y))^2
a = 1/2*sum(a)
b = n*n0 * (mean(y) - miu0)^2
b = b/2*(n + n0)
a+b
## question 2
sig = 1
xi = 0.01
y = d$y
X = as.matrix(d[,-1])
Bh = solve(t(X)%*%X) %*% t(X)%*%y
Bcov = sig^2 * solve(t(X)%*%X)
# posteior Bh
Bh/(1+xi)
###
x = c(1,0.12, 0.56)
Bh/(1+xi) %*% x
Bh/(1+xi)
x
dim(x)
x = as.matrix(x)
x
Bh/(1+xi) %*% x
Bh/(1+xi) %*% t(x)
Bh/(1 + xi)
x
###
x = c(1,0.12, 0.56)
x = as.matrix(x)
Bh/(1+xi) %*% t(x)
dim(Bh/(1+xi))
dim(t(x))
t(x) %*%  Bh/(1+xi)
sig *( 1 + (t(x) %*% solve( t(X)%*%X ) %*% x )/ (1+xi))
load("/Users/datn/github/circQTL_analysis/consensus_1/recount/coloc_result_UC.tsv.gz.Rdata")
View(qtl_hit)
load("/Users/datn/github/circQTL_analysis/consensus_1/recount/coloc_result_T1D.tsv.gz.Rdata")
